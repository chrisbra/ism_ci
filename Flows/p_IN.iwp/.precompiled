<?xml version="1.0" encoding="ASCII"?>
<model:iway xmlns:model="http://www.iwaysoftware.com/designer/model">
  <model:server name="iWay Registry">
    <model:processflow description="" iwayversion="8.0.3" name="p_IN">
      <model:objects>
        <model:object class="start" deactivate="false" defer="false" etap="false" id="start" key="1" name="Start" type="FLOWCHART_STARTUP_START" useglobalobj="false" xdebughigh="1" xdebuglow="1">
          <model:user>
            <model:properties>
              <model:group name="General">
                <model:propertyitem display="No" itemtype="boolean" label="Debug" name="Debug" required="false" value="true" valuetype="boolean"/>
                <model:propertyitem name="roottag" value=""/>
              </model:group>
            </model:properties>
          </model:user>
          <model:runtimevariables/>
        </model:object>
        <model:object class="end" deactivate="false" defer="false" etap="false" id="end" key="2" name="End" type="FLOWCHART_STARTUP_END" useglobalobj="false" xdebughigh="10" xdebuglow="1">
          <model:user>
            <model:properties>
              <model:group name="General">
                <model:propertyitem name="roottag" value=""/>
                <model:propertyitem name="terminate" value="false"/>
                <model:propertyitem name="ctype" value=""/>
              </model:group>
            </model:properties>
          </model:user>
        </model:object>
        <model:object class="agent" classname="com.ibi.agents.XDInternalEmitAgent" deactivate="false" defer="false" etap="false" id="queueout" key="3" name="Queue_OUT" type="FLOWCHART_STARTUP_OUTQUEUE" useglobalobj="false" xdebughigh="10" xdebuglow="1">
          <model:user>
            <model:properties>
              <model:group name="Queue Settings">
                <model:propertyitem description="If set, the emit respects the transactionality of the channel.  If not set, the emit is always done." name="trans" required="false" value="true"/>
                <model:propertyitem description="How many seconds to wait for synchronous response.  Set to 0 or leave blank to wait indefinitely." name="timeout" required="false" value="0"/>
              </model:group>
              <model:group name="Post Action">
                <model:propertyitem description="Return from this object." name="returnresponse" required="true" value="status"/>
              </model:group>
              <model:group name="hidden">
                <model:propertyitem description="{&quot;name&quot;:&quot;Configuration (queue_out)&quot;,&quot;propertyGroups&quot;:[{&quot;name&quot;:&quot;Queue Settings&quot;,&quot;properties&quot;:[{&quot;name&quot;:&quot;Name&quot;,&quot;value&quot;:&quot;OUT&quot;,&quot;description&quot;:&quot;Name of the internal queue to post messages to&quot;},{&quot;name&quot;:&quot;Priority&quot;,&quot;value&quot;:&quot;4&quot;,&quot;description&quot;:&quot;The priority is an integer between 0 and 9 inclusive. The lowest priority is 0. The highest most expedited priority is 9.&quot;},{&quot;name&quot;:&quot;Put Timeout&quot;,&quot;value&quot;:&quot;3000&quot;,&quot;description&quot;:&quot;Time, in milliseconds, to wait for queue to become available when attempting to put a message on the queue.  You can enter 0 for an unlimited wait, but this is not recommended.  If no value is supplied, timeout will be set to 3000 milliseconds.&quot;}]},{&quot;name&quot;:&quot;Registers (Sent)&quot;,&quot;properties&quot;:[{&quot;name&quot;:&quot;Apply&quot;,&quot;value&quot;:&quot;true&quot;,&quot;description&quot;:&quot;User registers are processing variables and their values. If you want these registers to be emitted with the message set this to true.  In resubmit operations, usually this is set to false.&quot;},{&quot;name&quot;:&quot;Namespace&quot;,&quot;value&quot;:&quot;*&quot;,&quot;description&quot;:&quot;List of register namespaces that will be made available to the ordered queue.&quot;}]}]}" name="queueoutconfig" value="queue_out"/>
                <model:propertyitem description="Id of the className" name="classNameId"/>
                <model:propertyitem name="priority" value="4"/>
                <model:propertyitem name="puttimeout" value="3000"/>
                <model:propertyitem name="wantuser" value="true"/>
                <model:propertyitem name="replytoreqns" value="*"/>
                <model:propertyitem name="queue" value="OUT"/>
              </model:group>
            </model:properties>
          </model:user>
        </model:object>
        <model:object class="end" classname="" deactivate="false" defer="false" etap="false" id="end" key="6" name="End Error" type="FLOWCHART_STARTUP_END" useglobalobj="false" xdebughigh="10" xdebuglow="1">
          <model:user>
            <model:properties>
              <model:group name="General">
                <model:propertyitem name="terminate"/>
                <model:propertyitem name="ctype"/>
              </model:group>
            </model:properties>
          </model:user>
        </model:object>
        <model:object class="agent" classname="com.ibi.agents.XDTransformAgent" id="transform" key="10" name="XML MWST" type="FLOWCHART_TRANSFORM">
          <model:user>
            <model:customevent/>
            <model:properties>
              <model:group name="Transform">
                <model:propertyitem description="Type of transformation" itemtype="string" name="engine" value="iway"/>
                <model:propertyitem description="Defined transform name to execute" itemtype="string" name="transform" value="XML_MWST_XML"/>
                <model:propertyitem name="intype" value="all"/>
                <model:propertyitem description="Should data be trimmed before transforming?" name="shouldTrimParm" required="false" value="false"/>
                <model:propertyitem name="parmns" value=""/>
              </model:group>
              <model:group name="hidden">
                <model:propertyitem name="classNameId" value="0"/>
              </model:group>
              <model:group name="Output Handling">
                <model:propertyitem description="Parse the transform output as XML, JSON or Unspecified." name="outtype" required="false" value="xml"/>
              </model:group>
              <model:group name="Error Handling">
                <model:propertyitem description="Whether output document emitted should be the original input document (original) or a status document (status)" name="stat" required="false" value="status"/>
              </model:group>
            </model:properties>
          </model:user>
        </model:object>
        <model:object class="agent" classname="com.ibi.agents.XDInternalEmitAgent" deactivate="false" defer="false" etap="false" id="queueout" key="8" name="Queue ERROR" type="FLOWCHART_STARTUP_OUTQUEUE" useglobalobj="false" xdebughigh="10" xdebuglow="1">
          <model:user>
            <model:properties>
              <model:group name="Queue Settings">
                <model:propertyitem description="If set, the emit respects the transactionality of the channel.  If not set, the emit is always done." name="trans" required="false" value="true"/>
                <model:propertyitem description="How many seconds to wait for synchronous response.  Set to 0 or leave blank to wait indefinitely." name="timeout" required="false" value="0"/>
              </model:group>
              <model:group name="Post Action">
                <model:propertyitem description="Return from this object." name="returnresponse" required="true" value="status"/>
              </model:group>
              <model:group name="hidden">
                <model:propertyitem description="{&quot;name&quot;:&quot;Configuration (queue_error)&quot;,&quot;propertyGroups&quot;:[{&quot;name&quot;:&quot;Queue Settings&quot;,&quot;properties&quot;:[{&quot;name&quot;:&quot;Name&quot;,&quot;value&quot;:&quot;ERROR&quot;,&quot;description&quot;:&quot;Name of the internal queue to post messages to&quot;},{&quot;name&quot;:&quot;Priority&quot;,&quot;value&quot;:&quot;4&quot;,&quot;description&quot;:&quot;The priority is an integer between 0 and 9 inclusive. The lowest priority is 0. The highest most expedited priority is 9.&quot;},{&quot;name&quot;:&quot;Put Timeout&quot;,&quot;value&quot;:&quot;3000&quot;,&quot;description&quot;:&quot;Time, in milliseconds, to wait for queue to become available when attempting to put a message on the queue.  You can enter 0 for an unlimited wait, but this is not recommended.  If no value is supplied, timeout will be set to 3000 milliseconds.&quot;}]},{&quot;name&quot;:&quot;Registers (Sent)&quot;,&quot;properties&quot;:[{&quot;name&quot;:&quot;Apply&quot;,&quot;value&quot;:&quot;true&quot;,&quot;description&quot;:&quot;User registers are processing variables and their values. If you want these registers to be emitted with the message set this to true.  In resubmit operations, usually this is set to false.&quot;},{&quot;name&quot;:&quot;Namespace&quot;,&quot;value&quot;:&quot;*&quot;,&quot;description&quot;:&quot;List of register namespaces that will be made available to the ordered queue.&quot;}]}]}" name="queueoutconfig" value="queue_error"/>
                <model:propertyitem description="Id of the className" name="classNameId"/>
                <model:propertyitem name="priority" value="4"/>
                <model:propertyitem name="puttimeout" value="3000"/>
                <model:propertyitem name="wantuser" value="true"/>
                <model:propertyitem name="replytoreqns" value="*"/>
                <model:propertyitem name="queue" value="ERROR"/>
              </model:group>
            </model:properties>
          </model:user>
        </model:object>
        <model:object class="agent" classname="com.ibi.agents.XDXALogBizErr" deactivate="true" defer="false" etap="false" id="serverAgent" key="5" name="BAM Tax" type="FLOWCHART_SERVER_AGENT" useglobalobj="false" xdebughigh="10" xdebuglow="1">
          <model:user>
            <model:properties>
              <model:group name="Main">
                <model:propertyitem description="What severity is this business error" name="sev" required="false" value="bizerror"/>
                <model:propertyitem description="A business error message to be added to the activity log" name="message" required="false" value="Calculating MwST"/>
                <model:propertyitem description="If set, this message is written only as part of a rollback of the flow" name="transaction" required="false" value="false"/>
              </model:group>
              <model:group name="User Defined"/>
            </model:properties>
          </model:user>
        </model:object>
        <model:object class="catch" classname="com.ibi.agents.XDCatchAgent" deactivate="false" defer="false" etap="false" id="catch" key="4" name="Catch" type="FLOWCHART_CATCH" useglobalobj="false" xdebughigh="10" xdebuglow="1">
          <model:user>
            <model:properties>
              <model:group name="Settings">
                <model:propertyitem description="Maximum number of times a CATCH will be effected per 'forward' entry." name="maxerr" required="false" value="1"/>
              </model:group>
            </model:properties>
          </model:user>
        </model:object>
      </model:objects>
      <model:relations startinstance="1">
        <model:relation completion="OnCustom" event="$success" frominstance="3" lineid="FLOWCHART_DEFAULT_LINE" toinstance="2">
          <model:customevents>
            <model:event check="true" type="Stock" value="$success"/>
            <model:event check="false" type="Stock" value="$fail"/>
            <model:event check="false" type="Stock" value="$error"/>
            <model:event check="false" type="Custom" value="fail_parse"/>
            <model:event check="false" type="Custom" value="notfound"/>
            <model:event check="false" type="Custom" value="timeout"/>
            <model:event check="false" type="Custom" value="cancelled"/>
            <model:event check="false" type="Custom" value="fail_notfound"/>
            <model:event check="false" type="Custom" value="fail_operation"/>
          </model:customevents>
        </model:relation>
        <model:relation completion="OnCustom" event="$success,$fail,$error,fail_parse,notfound,timeout,cancelled,fail_notfound,fail_operation" frominstance="8" linedisplay="OnCompletion" lineid="FLOWCHART_DEFAULT_LINE" toinstance="6">
          <model:customevents>
            <model:event check="true" type="Stock" value="$success"/>
            <model:event check="true" type="Stock" value="$fail"/>
            <model:event check="true" type="Stock" value="$error"/>
            <model:event check="true" type="Custom" value="fail_parse"/>
            <model:event check="true" type="Custom" value="notfound"/>
            <model:event check="true" type="Custom" value="timeout"/>
            <model:event check="true" type="Custom" value="cancelled"/>
            <model:event check="true" type="Custom" value="fail_notfound"/>
            <model:event check="true" type="Custom" value="fail_operation"/>
          </model:customevents>
          <model:relationlabel/>
        </model:relation>
        <model:relation completion="OnCustom" event="$success" frominstance="5" lineid="FLOWCHART_DEFAULT_LINE" toinstance="10">
          <model:customevents>
            <model:event check="true" type="Stock" value="$success"/>
            <model:event check="false" type="Stock" value="$fail"/>
            <model:event check="false" type="Stock" value="$error"/>
            <model:event check="false" type="Custom" value="fail_parse"/>
          </model:customevents>
        </model:relation>
        <model:relation completion="OnCompletion" frominstance="1" linedisplay="OnCompletion" lineid="FLOWCHART_DEFAULT_LINE" toinstance="4">
          <model:relationlabel/>
        </model:relation>
        <model:relation completion="OnCompletion" frominstance="4" linedisplay="OnCompletion" lineid="FLOWCHART_DEFAULT_LINE" toinstance="5">
          <model:relationlabel/>
        </model:relation>
        <model:relation completion="OnCustom" event="$error,error_retry" frominstance="4" linedisplay="OnCompletion" lineid="FLOWCHART_DEFAULT_LINE" toinstance="8">
          <model:customevents>
            <model:event check="true" type="Stock" value="$error"/>
            <model:event check="true" type="Custom" value="error_retry"/>
          </model:customevents>
          <model:relationlabel label="Error"/>
          <lineColor blue="0" green="0" red="255"/>
        </model:relation>
        <model:relation completion="OnCustom" event="$success" frominstance="10" linedisplay="OnCompletion" lineid="FLOWCHART_DEFAULT_LINE" toinstance="3">
          <model:customevents>
            <model:event check="true" type="Stock" value="$success"/>
            <model:event check="false" type="Stock" value="$fail"/>
            <model:event check="false" type="Stock" value="$error"/>
            <model:event check="false" type="Custom" value="fail_format"/>
            <model:event check="false" type="Custom" value="fail_transform"/>
          </model:customevents>
          <model:relationlabel/>
        </model:relation>
      </model:relations>
    </model:processflow>
  </model:server>
  <model:globalvariables/>
</model:iway>